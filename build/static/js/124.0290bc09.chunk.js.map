{"version":3,"sources":["assets/img/team/astro2.jpg","components/astrology/BookPoojaForm.js"],"names":["module","exports","BookPoojaForm","props","changeCountry","item","setState","selectedCountry","axiosConfig","post","country_code","timezones","zoneName","then","response","timezone","data","catch","error","console","log","changeCity","submitPlaceHandler","place","name","latitude","geonames","longitude","changeHandler1","e","status","target","value","changeHandler","handlecheckpooja","localStorage","setItem","JSON","stringify","getItem","history","push","_id","swal","submitHandler","preventDefault","obj","userId","address","state","city","country","date","mode","event_list","mobile","parseInt","email","userid","listofpooja","poojatype","event","this","searchQuery","bookpooja","parse","bookpoojadata","get","res","err","poojadata","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","md","lg","Param","onSubmit","class","type","required","placeholder","onChange","timeslot","time_slots","map","ele","i","key","disabled","pooja_price","options","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","selectedState","City","getCitiesOfState","countryCode","flat_no","React","Component"],"mappings":"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","file":"static/js/124.0290bc09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/astro2.50c958da.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button, Input } from \"reactstrap\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport \"../../../src/assets/scss/style.scss\";\r\n// import AutoSearch from './autosearch'\r\nimport { BiTime } from \"react-icons/bi\";\r\nimport Select from \"react-select\";\r\n\r\nimport { MdOutlineLocationOn } from \"react-icons/md\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport astrologinbg from \"../../assets/img/astrologin-bg.jpg\";\r\nimport textbottom from \"../../assets/img/textbottom.png\";\r\nimport astro2 from \"../../assets/img/team/astro2.jpg\";\r\nimport { Country, State, City } from \"country-state-city\";\r\n\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption,\r\n} from \"reactstrap\";\r\n\r\nclass BookPoojaForm extends React.Component {\r\n  constructor({ props }) {\r\n    super(props);\r\n    this.state = {\r\n      mode: \"\",\r\n      event_list: \"\",\r\n      mobile: \"\",\r\n      email: \"\",\r\n      userid: \"\",\r\n      date: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n      address: \"\",\r\n      listofpooja: [],\r\n      poojatype: \"\",\r\n      state: [],\r\n      city: [],\r\n      country: [],\r\n      selectedCountry: null,\r\n      selectedState: null,\r\n      selectedCity: null,\r\n      //   poojatype: \"online\",\r\n      bookpoojadata: {},\r\n      timeslot: \"\",\r\n    };\r\n  }\r\n\r\n  changeCountry = (item) => {\r\n    this.setState({ selectedCountry: item });\r\n\r\n    axiosConfig\r\n      .post(`/user/time_zone`, {\r\n        country_code: item?.timezones[0].zoneName,\r\n      })\r\n      .then((response) => {\r\n        this.setState({ timezone: response?.data?.data?.timezone });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  changeCity = (item) => {\r\n    console.log(\"item\", item);\r\n    this.setState({\r\n      submitPlaceHandler: item,\r\n    });\r\n\r\n    axiosConfig\r\n      .post(`/user/geo_detail`, {\r\n        place: item?.name,\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          latitude: response?.data?.data?.geonames[0].latitude,\r\n          longitude: response?.data?.data?.geonames[0].longitude,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  handleInputChanged(event) {\r\n    this.setState({\r\n      searchQuery: event.target.value,\r\n    });\r\n    axiosConfig\r\n      .post(`/user/geo_detail`, {\r\n        place: this.state.searchQuery,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    console.log(this.state.searchQuery);\r\n  }\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handlecheckpooja = (value) => {\r\n    console.log(value);\r\n    localStorage.setItem(\"poojaviewone\", JSON.stringify(value));\r\n    const userid = localStorage.getItem(\"user_id\");\r\n    if (userid !== null) {\r\n      //   history.push(\"/Poojadetailpage\");\r\n      //   this.props.history.push(\"/Poojadetailpage\");\r\n      this.props.history.push(`/Poojadetailpage/${value?._id}`);\r\n    } else swal(\"No User Found\", \"User Need to login First\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    const bookpooja = JSON.parse(localStorage.getItem(\"poojaviewone\"));\r\n    this.setState({ bookpoojadata: bookpooja });\r\n    console.log(bookpooja.mode);\r\n    this.setState({ poojatype: bookpooja?.mode });\r\n    // axiosConfig\r\n    //   .get(`/admin/admin_getone_event/${bookpooja._id}`)\r\n    //   .then((res) => {\r\n    //     console.log(res.data.data);\r\n    //     // setPooja(res.data.data);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    axiosConfig\r\n      .get(`/admin/get_adminevent`)\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        this.setState({ listofpooja: res?.data?.data });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // let { id } = this.props.match.params\r\n    // console.log(id)\r\n    // let userId = JSON.parse(localStorage.getItem('user_id'))\r\n\r\n    // let astroid = JSON.parse(localStorage.getItem('astroId'))\r\n    let userid = localStorage.getItem(\"user_id\");\r\n\r\n    let obj = {\r\n      // astroId: astroid,\r\n      userId: userid,\r\n      address: this.state.address,\r\n      city: this.state.city,\r\n      state: this.state.state,\r\n      country: this.state.country,\r\n      date: this.state.date,\r\n      mode: this.state.mode,\r\n      event_list: this.state.event_list,\r\n      mobile: parseInt(this.state.mobile),\r\n      email: this.state.email,\r\n      // dummy parameter is below need to be add in api\r\n      // timeslot:this.state.timeslot\r\n    };\r\n\r\n    axiosConfig\r\n      .post(`/user/add_event`, obj)\r\n      .then((response) => {\r\n        console.log(\"@@@@@\", response.data);\r\n        //localStorage.setItem('shipping_id', response?.data?.data[0]?._id)\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // window.location.reload(\"/astromallList\");\r\n        this.props.history.push(\"/astromallList\");\r\n      })\r\n\r\n      .catch((error) => {\r\n        swal(\"Error!\", \"You clicked the button!\", \"error\");\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const poojadata = this.state.bookpoojadata;\r\n    return (\r\n      // <LayoutOne headerTop=\"visible\">\r\n      // </LayoutOne>\r\n      <>\r\n        <section className=\"pt-0 pb-0\">\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              float: \"left\",\r\n              width: \"100%\",\r\n              backgroundColor: \"#272727\",\r\n              position: \"relative\",\r\n              backgroundAttachment: \"fixed\",\r\n              backgroundSize: \"cover\",\r\n              color: \"#ffffff\",\r\n              padding: \" 50px 0px 50px 0px\",\r\n              backgroundImage: `url(${astrologinbg})`,\r\n              backgroundPosition: \"center center\",\r\n              backgroundRepeat: \" no-repeat\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"leftcont text-left\">\r\n                    {/* <h1>\r\n                        Astromall Shop/ Product Detail/ Consultant List/ Address\r\n                    </h1> */}\r\n                    <h3>Enter Details for book Pooja</h3>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </section>\r\n        <section className=\"\">\r\n          <Container>\r\n            <div className=\"multi-address\"></div>\r\n            <Row>\r\n              <Col lg=\"12 mt-12\">\r\n                <div className=\"wal-amt\">\r\n                  <p>product id-{this.props.Param}</p>\r\n                  <p> product ids-[{this.props.data}]</p>\r\n                  <h3>Pooja Booking</h3>\r\n                  <hr></hr>\r\n                  <form onSubmit={this.submitHandler}>\r\n                    <Row>\r\n                      {this.state.poojatype === \"online\" ? (\r\n                        <>\r\n                          <Col md=\"3\">\r\n                            <div class=\"form-group mtb-10\">\r\n                              <label>Date*</label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date\"\r\n                                required\r\n                                placeholder=\"Enter Your landmark\"\r\n                                value={this.state.date}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                            </div>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <div class=\"form-group mtb-10\">\r\n                              <label>Slots*</label>\r\n\r\n                              <select\r\n                                className=\"form-control\"\r\n                                onChange={(e) =>\r\n                                  this.setState({\r\n                                    timeslot: e.target.value,\r\n                                  })\r\n                                }\r\n                              >\r\n                                <option>Select Time</option>\r\n                                {this.state.bookpoojadata?.time_slots?.map(\r\n                                  (ele, i) => (\r\n                                    <option key={i} value={ele}>\r\n                                      {ele}\r\n                                    </option>\r\n                                  )\r\n                                )}\r\n                              </select>\r\n                            </div>\r\n                          </Col>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Col md=\"3\">\r\n                            <div class=\"form-group mtb-10\">\r\n                              <label>Price </label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                // required\r\n                                placeholder={poojadata.pooja_price}\r\n                                // value={this.state.email}\r\n                                // onChange={this.changeHandler}\r\n                              />\r\n                            </div>\r\n                          </Col>\r\n                          {/* <Col md=\"3\">\r\n                            <div class=\"form-group mtb-10\">\r\n                              <label>price Offline*</label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"mobile\"\r\n                                // required\r\n                                placeholder=\"Enter Your Number\"\r\n                                // value={this.state.mobile}\r\n                                // onChange={this.changeHandler}\r\n                              />\r\n                            </div>\r\n                          </Col> */}\r\n                          <Col md=\"3\">\r\n                            <div class=\"form-group mtb-10\">\r\n                              <label>Date*</label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date\"\r\n                                required\r\n                                placeholder=\"Enter Your landmark\"\r\n                                value={this.state.date}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                            </div>\r\n                          </Col>\r\n                          {/* <Col md=\"4\">\r\n                        <div class=\"form-group mtb-10\">\r\n                          <label>price Online</label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"mode\"\r\n                            value={this.state.mode}\r\n                            onChange={this.changeHandler}\r\n                          >\r\n                            <option>Select</option>\r\n                            <option>Online</option>\r\n                            <option>Offline</option>\r\n                          </Input>\r\n                        </div>\r\n                      </Col> */}\r\n\r\n                          <Col md=\"3\">\r\n                            <div class=\"form-group mtb-10\">\r\n                              <label>Slots*</label>\r\n\r\n                              <select\r\n                                className=\"form-control\"\r\n                                onChange={(e) =>\r\n                                  this.setState({\r\n                                    timeslot: e.target.value,\r\n                                  })\r\n                                }\r\n                              >\r\n                                <option>Select Time</option>\r\n                                {this.state.bookpoojadata?.time_slots?.map(\r\n                                  (ele, i) => (\r\n                                    <option key={i} value={ele}>\r\n                                      {ele}\r\n                                    </option>\r\n                                  )\r\n                                )}\r\n                              </select>\r\n                            </div>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <label>Country</label>\r\n                            <Select\r\n                              options={Country.getAllCountries()}\r\n                              getOptionLabel={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              getOptionValue={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              value={this.state.selectedCountry}\r\n                              onChange={(item) => {\r\n                                this.changeCountry(item);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n\r\n                          <Col md=\"3\">\r\n                            <label>State</label>\r\n                            <Select\r\n                              options={State?.getStatesOfCountry(\r\n                                this.state.selectedCountry?.isoCode\r\n                              )}\r\n                              getOptionLabel={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              getOptionValue={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              value={this.state.selectedState}\r\n                              onChange={(item) => {\r\n                                this.setState({ selectedState: item });\r\n                              }}\r\n                            />\r\n                          </Col>\r\n\r\n                          <Col md=\"3\">\r\n                            <label>City</label>\r\n                            <Select\r\n                              options={City.getCitiesOfState(\r\n                                this.state.selectedState?.countryCode,\r\n                                this.state.selectedState?.isoCode\r\n                              )}\r\n                              getOptionLabel={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              getOptionValue={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              value={this.state.submitPlaceHandler}\r\n                              onChange={(item) => {\r\n                                this.changeCity(item);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n\r\n                          <Col md=\"6\">\r\n                            <div class=\"form-group mtb-10\">\r\n                              <label>Event Detail</label>\r\n                              <Input\r\n                                type=\"textarea\"\r\n                                name=\"flat_no\"\r\n                                required\r\n                                placeholder=\"Enter Your Number\"\r\n                                value={this.state.flat_no}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                            </div>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <div class=\"form-group mtb-10\">\r\n                              <label>Address*</label>\r\n                              <Input\r\n                                type=\"textarea\"\r\n                                name=\"address\"\r\n                                // required\r\n                                placeholder=\"Enter Your Number\"\r\n                                value={this.state.address}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                            </div>\r\n                          </Col>\r\n                        </>\r\n                      )}\r\n\r\n                      <Col md=\"12\" className=\"mt-3\">\r\n                        <Button className=\"btn btn-primary\">Submit</Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default BookPoojaForm;\r\n"],"sourceRoot":""}