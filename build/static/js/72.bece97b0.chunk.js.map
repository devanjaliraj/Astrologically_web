{"version":3,"sources":["components/astrology/AllMinRechargeCall.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js"],"names":["i","AllMinRechargeCall","props","componentDidMount","axiosConfig","get","then","response","console","log","data","status","setState","allminrechargeList","swal","catch","error","submitHandler","e","astroid","userId","recharge_planid","preventDefault","id","match","params","obj","astroId","userd","userid","recharge_planId","state","post","modal","toggle","bind","this","headerTop","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","md","minute","length","map","allmin","index","xl","lg","sm","xs","key","onClick","localStorage","setItem","history","push","size","maxWidth","isOpen","type","placeholder","React","Component","componentWillMount","constructor","getDerivedStateFromProps","undefined","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning"],"mappings":"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","file":"static/js/72.bece97b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport \"../../assets/scss/astroteam.scss\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\nimport astrologinbg from \"../../assets/img/astrologin-bg.jpg\"\r\nclass AllMinRechargeCall extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      allminrechargeList: [],\r\n      data: {},\r\n      userid: \"\",\r\n      astroid: \"\",\r\n      recharge_planId: \"\"\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  }\r\n  componentDidMount = () => {\r\n    axiosConfig\r\n      .get(\"/user/all_min_recharge\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.status === true) {\r\n          this.setState({ allminrechargeList: response.data.data });\r\n          swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  submitHandler = async (e, astroid, userId, recharge_planid) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    let obj = {\r\n      astroId: id,\r\n      astroid: astroid,\r\n      userd: id,\r\n      userid: astroid,\r\n      recharge_planId: id,\r\n      recharge_planid: recharge_planid,\r\n      userId: this.state.userid,\r\n    };\r\n\r\n    await axiosConfig\r\n      .post(`/user/addChatWallet`, obj)\r\n      .then((response) => {\r\n        console.log(\"hdfkjh\", response.data.status)\r\n        if (response.data.status === true) {\r\n          this.setState({\r\n          });\r\n        }\r\n      })\r\n\r\n      .catch((error) => {\r\n        swal(\"Error!\", \"You clicked the button!\", \"error\");\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { allminrechargeList } = this.state;\r\n    return (\r\n      <LayoutOne headerTop=\"visible\">\r\n        <section className=\"pt-0 pb-0\">\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              // backgroundColor: \"#FFD59E\",\r\n              // width: \"100%\",\r\n              // padding: \"70px 0px\",\r\n              // backgroundSize: \"cover\",\r\n              float: \"left\",\r\n              width: \"100%\",\r\n              backgroundColor: \"#272727\",\r\n              position: \"relative\",\r\n              backgroundAttachment: \"fixed\",\r\n              backgroundSize: \"cover\",\r\n              color: \"#ffffff\",\r\n              padding: \" 50px 0px 50px 0px\",\r\n              backgroundImage: `url(${astrologinbg})`,\r\n              backgroundPosition: \"center center\",\r\n              backgroundRepeat: \" no-repeat\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"leftcont text-left\" >\r\n                    <h1>Select Minute Now</h1>\r\n                    <h3 >\r\n                      Available Minute : <span >{this.state.minute}</span>\r\n                    </h3>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <Container>\r\n            <Row>\r\n              {allminrechargeList.length\r\n                ? allminrechargeList.map((allmin, index) => {\r\n                  return (\r\n                    <Col xl=\"3\" lg=\"3\" md=\"3\" sm=\"6\" xs=\"6\" key={index}>\r\n                      {/* <Link to=\"/chatApp\"> */}\r\n                      <button onClick={() => {\r\n                        localStorage.setItem(\"minute\", allmin.minute)\r\n                        this.props.history.push('/call')\r\n                      }}>\r\n                        <div className=\"promoBox success-box info-ribbon\"\r\n\r\n                        >\r\n                          {/* <aside>\r\n                            <p>{allmin.title}</p>\r\n                          </aside> */}\r\n                          <h4>Minute {allmin.minute}</h4>\r\n                        </div>\r\n                      </button>\r\n                      {/* </Link> */}\r\n                    </Col>\r\n                  );\r\n                })\r\n                : null}\r\n\r\n\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n\r\n        {/* modal for recharge*/}\r\n\r\n        <Modal\r\n          size=\"md\"\r\n          style={{ maxWidth: \"600px\", width: \"100%\" }}\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}\r\n        >\r\n          <ModalHeader className=\"wr-3\" toggle={this.toggle}>\r\n            <h2 className=\"wr-4\">Apply Voucher Code</h2>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"Wr-1 wr-t\">\r\n              <form>\r\n                <Col md=\"12\">\r\n                  <input type=\"text\" placeholder=\"Enter Your Voucher  Code\" />\r\n                </Col>\r\n                <Button className=\"btn btn-success\">Submit</Button>\r\n              </form>\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </LayoutOne>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllMinRechargeCall;\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') + '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\n    }\n    prototype.componentWillUpdate = componentWillUpdate;\n    var componentDidUpdate = prototype.componentDidUpdate;\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n  return Component;\n}\nexport { polyfill };"],"sourceRoot":""}