{"version":3,"sources":["components/astrology/AskQuestionList.js","../node_modules/reactstrap/es/Col.js"],"names":["AskQuestionList","props","componentDidMount","userId","JSON","parse","localStorage","getItem","axiosConfig","get","then","response","console","log","data","status","setState","askAstroList","catch","error","state","this","headerTop","className","style","backgroundColor","width","padding","backgroundSize","md","id","class","length","map","askAstro","index","key","to","astroId","astroid","_id","src","img","alt","fullname","all_skills","language","exp_in_years","callCharge","conrubute_hrs","React","Component","_excluded","stringOrNumberProp","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","xs","sm","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","Tag","attributes","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","push","_colClass","classes","createElement"],"mappings":"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","file":"static/js/81.3fdcf69e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Row, Col, Button } from 'reactstrap'\r\n// import textbottom from '../../assets/img/textbottom.png'\r\n// import astro3 from '../../assets/img/team/astro3.jpg'\r\nimport '../../assets/scss/astroteam.scss'\r\nimport LayoutOne from '../../layouts/LayoutOne'\r\nimport axiosConfig from '../../axiosConfig'\r\n\r\nclass AskQuestionList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      // data: {},\r\n      askAstroList: [],\r\n      //   Form: '',\r\n      //   To: '',\r\n      //   astroid: '',\r\n      //   userid: '',\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    // let { id } = this.props.match.params\r\n    let userId = JSON.parse(localStorage.getItem('user_id'))\r\n\r\n    axiosConfig\r\n      .get(`/user/completed_order/${userId}`)\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        if (response.data.status === true) {\r\n          this.setState({ askAstroList: response.data.data })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        console.log(error.response)\r\n      })\r\n  }\r\n\r\n  //   submitHandler = (e, astroid, mobile) => {\r\n  //     e.preventDefault()\r\n  //     // let astrologerList = localStorage.getItem('astrologerList')\r\n  //     let mobileNo = localStorage.getItem('user_mobile_no')\r\n  //     let userId = JSON.parse(localStorage.getItem('user_id'))\r\n  //     let astroId = astroid\r\n  //     let obj = {\r\n  //       userid: userId,\r\n  //       astroid: astroId,\r\n  //       // astrologerList: astrologerList,\r\n  //       From: mobile, //parseInt(this.state.number)\r\n  //       To: mobileNo, //parseInt(this.state.number)\r\n  //     }\r\n  //     axiosConfig\r\n  //       .post(`/user/make_call`, obj)\r\n\r\n  //       .then((response) => {\r\n  //         console.log('rhsagdhgshgdjhgj', response.data.data)\r\n  //         // console.log(response.data.STATUSMSG)\r\n  //         // this.setState({ responseData: response.data })\r\n  //         // swal('Successful!', 'Recharge Successful!', 'success')\r\n  //         // this.props.history.push('/orderrecharge')\r\n  //       })\r\n\r\n  //       .catch((error) => {\r\n  //         console.log(error)\r\n  //         // swal('Error!', 'Invalid!', 'error')\r\n  //       })\r\n  //   }\r\n\r\n  render() {\r\n    const { askAstroList } = this.state\r\n\r\n    return (\r\n      <LayoutOne headerTop=\"visible\">\r\n        <section className=\"pt-0 pb-0\">\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              backgroundColor: '#FFD59E',\r\n              width: '100%',\r\n              padding: '70px 0px',\r\n              backgroundSize: 'cover',\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"leftcont text-left\">\r\n                    <h1>Ask Question Astrologer</h1>\r\n                    <p></p>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </section>\r\n        <section id=\"team\" class=\"pb-5\">\r\n          <Container>\r\n            {/* <div className=\"heading mb-30\">\r\n                <h2>Best Astrologers </h2>\r\n                <img src={textbottom} alt=\"\"/>\r\n            </div>         */}\r\n            <Row>\r\n              {askAstroList.length\r\n                ? askAstroList.map((askAstro, index) => {\r\n                    return (\r\n                      <Col md=\"3\" key={index}>\r\n                        <div className=\"image-flip\">\r\n                          <div className=\"mainflip flip-0\">\r\n                            <div className=\"frontside\">\r\n                              <Link\r\n                                to={\r\n                                  '/askquestion/' +\r\n                                  askAstro?.astroId.astroid._id\r\n                                }\r\n                                className=\"\"\r\n                              >\r\n                                <div className=\"card\">\r\n                                  <div className=\"card-body text-center\">\r\n                                    <p>\r\n                                      <img\r\n                                        src={askAstro?.astroId.astroid.img}\r\n                                        alt=\"\"\r\n                                      />\r\n                                    </p>\r\n                                    <h4 className=\"card-title\">\r\n                                      {askAstro?.astroId.astroid.fullname}\r\n                                    </h4>\r\n                                    <ul className=\"mb-3\">\r\n                                      <li>\r\n                                        Specility:{' '}\r\n                                        <span>\r\n                                          {askAstro?.astroId.astroid.all_skills}\r\n                                        </span>\r\n                                      </li>\r\n                                      <li>\r\n                                        Language:{' '}\r\n                                        <span>\r\n                                          {askAstro?.astroId.astroid.language}\r\n                                        </span>\r\n                                      </li>\r\n                                      <li>\r\n                                        Experience:{' '}\r\n                                        <span>\r\n                                          {\r\n                                            askAstro?.astroId.astroid\r\n                                              .exp_in_years\r\n                                          }\r\n                                        </span>\r\n                                      </li>\r\n                                      <li>\r\n                                        Call Rate:{' '}\r\n                                        <span>\r\n                                          {askAstro?.astroId.astroid.callCharge}\r\n                                          /\r\n                                          {\r\n                                            askAstro?.astroId.astroid\r\n                                              .conrubute_hrs\r\n                                          }\r\n                                        </span>\r\n                                      </li>\r\n                                    </ul>\r\n                                    <Link\r\n                                      className=\"btn btn-primary btn-sm st-d\"\r\n                                      to={\r\n                                        '/askquestion/' +\r\n                                        askAstro?.astroId.astroid._id\r\n                                      }\r\n                                    >\r\n                                      Ask Question\r\n                                    </Link>\r\n                                    {/* \r\n                                    <Link className=\"btn btn-primary btn-sm st-d\">\r\n                                      Online\r\n                                    </Link>\r\n                                    <Link\r\n                                      className=\"btn btn-primary btn-sm\"\r\n                                      to={'/allastrologerlist/' + askAstro._id}\r\n                                    > */}\r\n                                    {/* <span\r\n                                        className=\"sr-btn\"\r\n                                        onClick={this.onCallSubmit}\r\n                                      >\r\n                                        <i class=\"fa fa-phone\">\r\n                                          {astrologer?.userRequestForm}\r\n                                        </i>{' '}\r\n                                        Call\r\n                                      </span> */}\r\n\r\n                                    {/* {localStorage.getItem('auth-token') ? ( */}\r\n                                    {/* <span\r\n                                        className=\"sr-btn\"\r\n                                        onClick={(e) =>\r\n                                          this.submitHandler(\r\n                                            e,\r\n                                            askAstro?._id,\r\n                                            askAstro?.mobile,\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <i class=\"fa fa-phone\"></i> Call\r\n                                      </span> */}\r\n                                    {/* ) : (\r\n                                        <span\r\n                                          className=\"sr-btn\"\r\n                                          onClick={(e) =>\r\n                                            (window.location.href =\r\n                                              '/#/login-register')\r\n                                          }\r\n                                        >\r\n                                          <i class=\"fa fa-phone\"></i> Call\r\n                                        </span>\r\n                                      )} */}\r\n\r\n                                    {/* <small>\r\n                                            / 20{' '}\r\n                                            <i class=\"fa fa-inr\" aria-hidden=\"true\">\r\n                                              {astrologer?.conrubute_hrs}\r\n                                            </i>{' '}\r\n                                            per Hour\r\n                                          </small> */}\r\n                                    {/* </Link> */}\r\n                                  </div>\r\n                                </div>\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    )\r\n                  })\r\n                : null}\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n      </LayoutOne>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AskQuestionList\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\nvar Col = function Col(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    widths = props.widths,\n    Tag = props.tag,\n    attributes = _objectWithoutPropertiesLoose(props, _excluded);\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n    var isXs = !i;\n    if (isObject(columnProp)) {\n      var _classNames;\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(_colClass);\n    }\n  });\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;"],"sourceRoot":""}