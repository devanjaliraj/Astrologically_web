{"version":3,"sources":["components/astrology/AskQuestionList.js"],"names":["AskQuestionList","props","componentDidMount","userId","JSON","parse","localStorage","getItem","axiosConfig","get","then","response","console","log","data","status","setState","askAstroList","catch","error","state","this","headerTop","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","md","id","class","length","map","askAstro","index","key","to","astroid","_id","src","img","alt","fullname","all_skills","language","exp_in_years","callCharge","conrubute_hrs","React","Component"],"mappings":"iQASMA,EAAe,kDACnB,WAAYC,GAAQ,IAAD,EAUhB,OAVgB,qBACjB,cAAMA,IAWRC,kBAAoB,WAElB,IAAIC,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,YAE7CC,IACGC,IAAI,yBAAD,OAA0BN,IAC7BO,MAAK,SAACC,GAE+B,IAAD,KADnCC,QAAQC,IAAIF,EAASG,OACQ,IAAzBH,EAASG,KAAKC,UAChB,EAAKC,SAAS,CAAEC,aAA2B,QAAf,EAAEN,EAASG,YAAI,aAAb,EAAeA,OAC7CF,QAAQC,IAAiB,QAAd,EAACF,EAASG,YAAI,aAAb,EAAeA,UAG9BI,OAAM,SAACC,GACNP,QAAQC,IAAIM,GACZP,QAAQC,IAAIM,EAAMR,cAxBtB,EAAKS,MAAQ,CAEXH,aAAc,IAKf,EAsOF,OArOA,mCAkDD,WACE,IAAQA,EAAiBI,KAAKD,MAAtBH,aAER,OACE,kBAAC,IAAS,CAACK,UAAU,WACnB,6BAASC,UAAU,aACjB,yBACEA,UAAU,GACVC,MAAO,CAKLC,MAAO,OACPC,MAAO,OACPC,gBAAiB,UACjBC,SAAU,WACVC,qBAAsB,QACtBC,eAAgB,QAChBC,MAAO,UACPC,QAAS,qBACTC,gBAAgB,OAAD,OAASC,IAAY,KACpCC,mBAAoB,gBACpBC,iBAAkB,aAClBC,UAAW,WAGb,kBAAC,IAAS,KACR,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACC,GAAG,MACN,yBAAKf,UAAU,sBACb,uDACA,kCAOZ,6BAASgB,GAAG,OAAOC,MAAM,QACvB,kBAAC,IAAS,KAKR,kBAAC,IAAG,KACDvB,EAAawB,OACVxB,EAAayB,KAAI,SAACC,EAAUC,GAC5B,OACE,kBAAC,IAAG,CAACN,GAAG,IAAIO,IAAKD,GACf,yBAAKrB,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,aACb,kBAAC,IAAI,CACHuB,GACE,iBACQ,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QAAQC,KAEpBzB,UAAU,IAEV,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yBACb,2BACE,yBACE0B,IAAa,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QAAQG,IACvBC,IAAI,MAGR,wBAAI5B,UAAU,cACH,OAARoB,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QAAQK,UAErB,wBAAI7B,UAAU,QACZ,yCACa,IACX,8BACW,OAARoB,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QAAQM,aAGvB,wCACY,IACV,8BACW,OAARV,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QAAQO,WAGvB,0CACc,IACZ,8BAEY,OAARX,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QAAQQ,eAIxB,yCACa,IACX,8BACW,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QAAQS,WAAU,IAGnB,OAARb,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QACPU,iBAKX,kBAAC,IAAI,CACHlC,UAAU,8BACVuB,GACE,iBACQ,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QAAQC,MACnB,0BAgEnB,aAMf,EAjPkB,CAASU,IAAMC,WAoPrB3D,a","file":"static/js/89.5fd1dce7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Row, Col, Button } from 'reactstrap'\r\nimport astrologinbg from '../../assets/img/astrologin-bg.jpg'\r\n// import astro3 from '../../assets/img/team/astro3.jpg'\r\nimport '../../assets/scss/astroteam.scss'\r\nimport LayoutOne from '../../layouts/LayoutOne'\r\nimport axiosConfig from '../../axiosConfig'\r\n\r\nclass AskQuestionList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      // data: {},\r\n      askAstroList: [],\r\n      //   Form: '',\r\n      //   To: '',\r\n      //   astroid: '',\r\n      //   userid: '',\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    // let { id } = this.props.match.params\r\n    let userId = JSON.parse(localStorage.getItem('user_id'))\r\n\r\n    axiosConfig\r\n      .get(`/user/completed_order/${userId}`)\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        if (response.data.status === true) {\r\n          this.setState({ askAstroList: response.data?.data })\r\n          console.log(response.data?.data)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        console.log(error.response)\r\n      })\r\n  }\r\n\r\n  //   submitHandler = (e, astroid, mobile) => {\r\n  //     e.preventDefault()\r\n  //     // let astrologerList = localStorage.getItem('astrologerList')\r\n  //     let mobileNo = localStorage.getItem('user_mobile_no')\r\n  //     let userId = JSON.parse(localStorage.getItem('user_id'))\r\n  //     let astroId = astroid\r\n  //     let obj = {\r\n  //       userid: userId,\r\n  //       astroid: astroId,\r\n  //       // astrologerList: astrologerList,\r\n  //       From: mobile, //parseInt(this.state.number)\r\n  //       To: mobileNo, //parseInt(this.state.number)\r\n  //     }\r\n  //     axiosConfig\r\n  //       .post(`/user/make_call`, obj)\r\n\r\n  //       .then((response) => {\r\n  //         console.log('rhsagdhgshgdjhgj', response.data.data)\r\n  //         // console.log(response.data.STATUSMSG)\r\n  //         // this.setState({ responseData: response.data })\r\n  //         // swal('Successful!', 'Recharge Successful!', 'success')\r\n  //         // this.props.history.push('/orderrecharge')\r\n  //       })\r\n\r\n  //       .catch((error) => {\r\n  //         console.log(error)\r\n  //         // swal('Error!', 'Invalid!', 'error')\r\n  //       })\r\n  //   }\r\n\r\n  render() {\r\n    const { askAstroList } = this.state\r\n\r\n    return (\r\n      <LayoutOne headerTop=\"visible\">\r\n        <section className=\"pt-0 pb-0\">\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              // backgroundColor: '#FFD59E',\r\n              // width: '100%',\r\n              // padding: '70px 0px',\r\n              // backgroundSize: 'cover',\r\n              float: \"left\",\r\n              width: \"100%\",\r\n              backgroundColor: \"#272727\",\r\n              position: \"relative\",\r\n              backgroundAttachment: \"fixed\",\r\n              backgroundSize: \"cover\",\r\n              color: \"#ffffff\",\r\n              padding: \" 50px 0px 50px 0px\",\r\n              backgroundImage: `url(${astrologinbg})`,\r\n              backgroundPosition: \"center center\",\r\n              backgroundRepeat: \" no-repeat\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"leftcont text-left\">\r\n                    <h1>Ask Question Astrologer</h1>\r\n                    <p></p>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </section>\r\n        <section id=\"team\" class=\"pb-5\">\r\n          <Container>\r\n            {/* <div className=\"heading mb-30\">\r\n                <h2>Best Astrologers </h2>\r\n                <img src={textbottom} alt=\"\"/>\r\n            </div>         */}\r\n            <Row>\r\n              {askAstroList.length\r\n                ? askAstroList.map((askAstro, index) => {\r\n                  return (\r\n                    <Col md=\"3\" key={index}>\r\n                      <div className=\"image-flip\">\r\n                        <div className=\"mainflip flip-0\">\r\n                          <div className=\"frontside\">\r\n                            <Link\r\n                              to={\r\n                                '/askquestion/' +\r\n                                askAstro?.astroid._id\r\n                              }\r\n                              className=\"\"\r\n                            >\r\n                              <div className=\"card\">\r\n                                <div className=\"card-body text-center\">\r\n                                  <p>\r\n                                    <img\r\n                                      src={askAstro?.astroid.img}\r\n                                      alt=\"\"\r\n                                    />\r\n                                  </p>\r\n                                  <h4 className=\"card-title\">\r\n                                    {askAstro?.astroid.fullname}\r\n                                  </h4>\r\n                                  <ul className=\"mb-3\">\r\n                                    <li>\r\n                                      Specility:{' '}\r\n                                      <span>\r\n                                        {askAstro?.astroid.all_skills}\r\n                                      </span>\r\n                                    </li>\r\n                                    <li>\r\n                                      Language:{' '}\r\n                                      <span>\r\n                                        {askAstro?.astroid.language}\r\n                                      </span>\r\n                                    </li>\r\n                                    <li>\r\n                                      Experience:{' '}\r\n                                      <span>\r\n                                        {\r\n                                          askAstro?.astroid.exp_in_years\r\n                                        }\r\n                                      </span>\r\n                                    </li>\r\n                                    <li>\r\n                                      Call Rate:{' '}\r\n                                      <span>\r\n                                        {askAstro?.astroid.callCharge}\r\n                                        /\r\n                                        {\r\n                                          askAstro?.astroid\r\n                                            .conrubute_hrs\r\n                                        }\r\n                                      </span>\r\n                                    </li>\r\n                                  </ul>\r\n                                  <Link\r\n                                    className=\"btn btn-primary btn-sm st-d\"\r\n                                    to={\r\n                                      '/askquestion/' +\r\n                                      askAstro?.astroid._id\r\n                                    }\r\n                                  >\r\n                                    Ask Question\r\n                                  </Link>\r\n                                  {/* \r\n                                    <Link className=\"btn btn-primary btn-sm st-d\">\r\n                                      Online\r\n                                    </Link>\r\n                                    <Link\r\n                                      className=\"btn btn-primary btn-sm\"\r\n                                      to={'/allastrologerlist/' + askAstro._id}\r\n                                    > */}\r\n                                  {/* <span\r\n                                        className=\"sr-btn\"\r\n                                        onClick={this.onCallSubmit}\r\n                                      >\r\n                                        <i class=\"fa fa-phone\">\r\n                                          {astrologer?.userRequestForm}\r\n                                        </i>{' '}\r\n                                        Call\r\n                                      </span> */}\r\n\r\n                                  {/* {localStorage.getItem('auth-token') ? ( */}\r\n                                  {/* <span\r\n                                        className=\"sr-btn\"\r\n                                        onClick={(e) =>\r\n                                          this.submitHandler(\r\n                                            e,\r\n                                            askAstro?._id,\r\n                                            askAstro?.mobile,\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <i class=\"fa fa-phone\"></i> Call\r\n                                      </span> */}\r\n                                  {/* ) : (\r\n                                        <span\r\n                                          className=\"sr-btn\"\r\n                                          onClick={(e) =>\r\n                                            (window.location.href =\r\n                                              '/#/login-register')\r\n                                          }\r\n                                        >\r\n                                          <i class=\"fa fa-phone\"></i> Call\r\n                                        </span>\r\n                                      )} */}\r\n\r\n                                  {/* <small>\r\n                                            / 20{' '}\r\n                                            <i class=\"fa fa-inr\" aria-hidden=\"true\">\r\n                                              {astrologer?.conrubute_hrs}\r\n                                            </i>{' '}\r\n                                            per Hour\r\n                                          </small> */}\r\n                                  {/* </Link> */}\r\n                                </div>\r\n                              </div>\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  )\r\n                })\r\n                : null}\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n      </LayoutOne>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AskQuestionList\r\n"],"sourceRoot":""}