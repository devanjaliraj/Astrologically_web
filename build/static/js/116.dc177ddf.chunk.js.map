{"version":3,"sources":["components/astrology/zegocloud/Call.js"],"names":["randomID","len","result","i","chars","maxPos","length","charAt","Math","floor","random","getUrlParams","url","window","location","href","urlStr","split","URLSearchParams","Call","roomID","get","myMeeting","element","kitToken","ZegoUIKitPrebuilt","generateKitTokenForTest","create","joinRoom","container","sharedLinks","name","origin","pathname","scenario","mode","GroupCall","className","ref","style","width","height"],"mappings":"0PACA,06MAGA,SAASA,EAASC,GAChB,IAAIC,EAAS,GACb,GAAIA,EAAQ,OAAOA,EACnB,IAEEC,EAFEC,EAAQ,iEACVC,EAASD,EAAME,OAGjB,IADAL,EAAMA,GAAO,EACRE,EAAI,EAAGA,EAAIF,EAAKE,IACnBD,GAAUE,EAAMG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEpD,OAAOH,EAGF,SAASS,IAEI,IADlBC,EAAW,uDAAGC,OAAOC,SAASC,KAE1BC,EAASJ,EAAIK,MAAM,KAAK,GAC5B,OAAO,IAAIC,gBAAgBF,GAGd,SAASG,IACtB,IAAMC,EAAST,IAAeU,IAAI,WAAarB,EAAS,GACpDsB,EAAS,uCAAG,WAAOC,GAAuB,uEAE9B,UACO,mCACfC,EAAWC,oBAAkBC,wBAFrB,UACO,mCAInBN,EACApB,EAAS,GACTA,EAAS,IAIAyB,oBAAkBE,OAAOH,GAEjCI,SAAS,CACVC,UAAWN,EACXO,YAAa,CACX,CACEC,KAAM,gBACNnB,IACEC,OAAOC,SAASkB,OAChBnB,OAAOC,SAASmB,SAChB,WACAb,IAGNc,SAAU,CACRC,KAAMV,oBAAkBW,aAEzB,2CACJ,gBA/BY,sCAiCb,OACE,uBACEC,UAAU,kBACVC,IAAKhB,EACLiB,MAAO,CAAEC,MAAO,QAASC,OAAQ","file":"static/js/116.dc177ddf.chunk.js","sourcesContent":["import * as React from \"react\";\r\n// import \"./style.css\";\r\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\r\n\r\nfunction randomID(len) {\r\n  let result = \"\";\r\n  if (result) return result;\r\n  var chars = \"12345qwertyuiopasdfgh67890jklmnbvcxzMNBVCZXASDQWERTYHGFUIOLKJP\",\r\n    maxPos = chars.length,\r\n    i;\r\n  len = len || 5;\r\n  for (i = 0; i < len; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * maxPos));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function getUrlParams(\r\n  url: string = window.location.href\r\n): URLSearchParams {\r\n  let urlStr = url.split(\"?\")[1];\r\n  return new URLSearchParams(urlStr);\r\n}\r\n\r\nexport default function Call() {\r\n  const roomID = getUrlParams().get(\"roomID\") || randomID(5);\r\n  let myMeeting = async (element: HTMLDivElement) => {\r\n    // generate Kit Token\r\n    const appID = 117315587;\r\n    const serverSecret = \"7d73c3ebbc300b3863c13e2711a69195\";\r\n    const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\r\n      appID,\r\n      serverSecret,\r\n      roomID,\r\n      randomID(5),\r\n      randomID(5)\r\n    );\r\n\r\n    // Create instance object from Kit Token.\r\n    const zp = ZegoUIKitPrebuilt.create(kitToken);\r\n    // start the call\r\n    zp.joinRoom({\r\n      container: element,\r\n      sharedLinks: [\r\n        {\r\n          name: \"Personal link\",\r\n          url:\r\n            window.location.origin +\r\n            window.location.pathname +\r\n            \"?roomID=\" +\r\n            roomID,\r\n        },\r\n      ],\r\n      scenario: {\r\n        mode: ZegoUIKitPrebuilt.GroupCall, // To implement 1-on-1 calls, modify the parameter here to [ZegoUIKitPrebuilt.OneONoneCall].\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"myCallContainer\"\r\n      ref={myMeeting}\r\n      style={{ width: \"100vw\", height: \"100vh\" }}\r\n    ></div>\r\n  );\r\n}\r\n"],"sourceRoot":""}