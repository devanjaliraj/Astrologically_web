{"version":3,"sources":["components/astrology/zegocloud/LiveVideonew.jsx","components/astrology/zegocloud/LiveStreaming.js"],"names":["LiveVideonew","props","rtcProps","appId","channel","token","uid","role","callbacks","EndCall","setState","setVideoCall","changeHandler","e","target","name","value","submitHandler","preventDefault","changeView","state","stream","userid","astroid","mobile","firstname","p_firstname","lastname","p_lastname","dob","p_dob","date_of_time","p_date_of_time","birthPlace","p_birthPlace","gender","marital_status","occupation","topic_of_cnsrn","entertopic_of_cnsrn","data","userId","JSON","parse","localStorage","getItem","axiosConfig","get","then","response","catch","error","console","log","headerTop","style","display","width","height","this","React","Component","i","LiveStreaming","options","channelParameters","localAudioTrack","localVideoTrack","remoteAudioTrack","remoteVideoTrack","remoteUid","agoraEngine","AgoraRTC","createClient","mode","codec","remotePlayerContainer","document","createElement","localPlayerContainer","id","textContent","padding","on","user","mediaType","subscribe","videoTrack","audioTrack","toString","body","append","play","window","onload","getElementById","onclick","alert","join","createMicrophoneAudioTrack","createCameraVideoTrack","publish","close","removeVideoDiv","leave","location","reload","checked","setClientRole","stop","replaceTrack","elementId","Div","remove","startBasicCall","className","type"],"mappings":"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","file":"static/js/132.9ea94b98.chunk.js","sourcesContent":["import { Container, Row, Col, Button, Input } from \"reactstrap\";\r\nimport LayoutOne from \"../../../layouts/LayoutOne\";\r\nimport React from \"react\";\r\nimport AgoraUIKit from \"agora-react-uikit\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../src/assets/scss/style.scss\";\r\n// import Livenewpage from \"./Livenewpage\";\r\nimport { LiveStreaming } from \"./LiveStreaming.js\";\r\n\r\nclass LiveVideonew extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stream: null,\r\n      changeView: false,\r\n      userid: \"\",\r\n      astroid: \"\",\r\n      mobile: \"\",\r\n      firstname: \"\",\r\n      p_firstname: \"\",\r\n      lastname: \"\",\r\n      p_lastname: \"\",\r\n      dob: \"\",\r\n      p_dob: \"\",\r\n      date_of_time: \"\",\r\n      p_date_of_time: \"\",\r\n      birthPlace: \"\",\r\n      p_birthPlace: \"\",\r\n      gender: \"\",\r\n      marital_status: \"\",\r\n      occupation: \"\",\r\n      topic_of_cnsrn: \"\",\r\n      entertopic_of_cnsrn: \"\",\r\n      data: [],\r\n      setVideoCall: false,\r\n    };\r\n  }\r\n\r\n  rtcProps = {\r\n    // Pass your App ID here.\r\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n    // Set the channel name.\r\n    channel: \"anujesh\",\r\n    // Pass your temp token here.\r\n    token:\r\n      \"0067d1f07c76f9d46be86bc46a791884023IABZ7sN96RKmFTBkTuG/f1zAI3QZSNel+OjfEB1HYpztCElEne4AAAAAEABAuqeD7vxdZAEAAQAOOF1k\",\r\n    // Set the user ID.\r\n    uid: 0,\r\n    // Set the user role\r\n\r\n    role: \"host\",\r\n  };\r\n\r\n  callbacks = {\r\n    EndCall: () => this.setState({ setVideoCall: false }),\r\n  };\r\n  componentDidMount() {\r\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    axiosConfig\r\n      .get(`/user/viewoneuser/${userId}`)\r\n      .then((response) => {\r\n        this.setState({ mobile: response.data.data.mobile });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ setVideoCall: true });\r\n    this.setState({ changeView: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LayoutOne headerTop=\"visible\">\r\n          {/* live streaming by anujesh host*/}\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100vw\",\r\n              height: \"90vh\",\r\n            }}\r\n          >\r\n            <AgoraUIKit rtcProps={this.rtcProps} callbacks={this.callbacks} />\r\n          </div>\r\n          <div>\r\n            <LiveStreaming />\r\n          </div>\r\n\r\n          {/* {this.state.changeView === true ? (\r\n            <>\r\n              <section>\r\n                {this.state.setVideoCall === true ? (\r\n                  <>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        width: \"100vw\",\r\n                        height: \"90vh\",\r\n                      }}\r\n                    >\r\n                      <AgoraUIKit\r\n                        rtcProps={this.rtcProps}\r\n                        callbacks={this.callbacks}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n              </section>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <section className=\"pt-0 pb-0\">\r\n                <div\r\n                  className=\"\"\r\n                  style={{\r\n                    float: \"left\",\r\n                    width: \"100%\",\r\n                    backgroundColor: \"#272727\",\r\n                    position: \"relative\",\r\n                    backgroundAttachment: \"fixed\",\r\n                    backgroundSize: \"cover\",\r\n                    color: \"#ffffff\",\r\n                    padding: \" 50px 0px 50px 0px\",\r\n                    backgroundImage: `url(${astrologinbg})`,\r\n                    backgroundPosition: \"center center\",\r\n                    backgroundRepeat: \" no-repeat\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <Container>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <div className=\"leftcont text-left\">\r\n                          <h1>Video InTake Form</h1>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>\r\n              </section>\r\n              <section className=\"\">\r\n                <Container>\r\n                  <Row>\r\n                    <Col lg=\"12\">\r\n                      <div className=\"wal-amt\">\r\n                        <h3>Video InTake Form </h3>\r\n                        <hr></hr>\r\n                        <form onSubmit={this.submitHandler}>\r\n                          <Row>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Mobile Number*</label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  name=\"mobile\"\r\n                                  value={this.state.mobile}\r\n                                  onChange={this.changeHandler}\r\n                                  required\r\n                                  placeholder=\"Enter Your Number\"\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>First Name*</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"firstname\"\r\n                                  required\r\n                                  placeholder=\"Enter Your FirstName\"\r\n                                  value={this.state.fullname}\r\n                                  onChange={this.changeHandler}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Patner First Name*</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"p_firstname\"\r\n                                  placeholder=\"Enter Your Patner firstname\"\r\n                                  value={this.state.p_firstname}\r\n                                  onChange={this.changeHandler}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label> Last Name*</label>\r\n                                <input\r\n                                  required\r\n                                  type=\"text\"\r\n                                  name=\"lastname\"\r\n                                  placeholder=\"Enter Your  Lastname\"\r\n                                  value={this.state.lastname}\r\n                                  onChange={this.changeHandler}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Patner Last Name*</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"p_lastname\"\r\n                                  placeholder=\"Enter Your Patner Lastname\"\r\n                                  value={this.state.p_lastname}\r\n                                  onChange={this.changeHandler}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Date of Birth*</label>\r\n                                <input\r\n                                  type=\"date\"\r\n                                  name=\"dob\"\r\n                                  value={this.state.dob}\r\n                                  onChange={this.changeHandler}\r\n                                  required\r\n                                  placeholder=\"Enter Your Number\"\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label> patner Date of Birth*</label>\r\n                                <input\r\n                                  type=\"date\"\r\n                                  name=\"p_dob\"\r\n                                  value={this.state.p_dob}\r\n                                  onChange={this.changeHandler}\r\n                                  placeholder=\"Enter Your Number\"\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Date of Time*</label>\r\n                                <input\r\n                                  type=\"time\"\r\n                                  name=\"date_of_time\"\r\n                                  value={this.state.date_of_time}\r\n                                  onChange={this.changeHandler}\r\n                                  required\r\n                                  placeholder=\"Enter Your Number\"\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label> patner Date of Time*</label>\r\n                                <input\r\n                                  type=\"time\"\r\n                                  name=\"p_date_of_time\"\r\n                                  value={this.state.p_date_of_time}\r\n                                  onChange={this.changeHandler}\r\n                                  // required\r\n                                  placeholder=\"Enter Your Number\"\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Birth Place*</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"birthPlace\"\r\n                                  value={this.state.birthPlace}\r\n                                  onChange={this.changeHandler}\r\n                                  required\r\n                                  placeholder=\"Enter Your  Birth Place\"\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label> patner Birth Place</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"p_birthPlace\"\r\n                                  value={this.state.p_birthPlace}\r\n                                  onChange={this.changeHandler}\r\n                                  // required\r\n                                  placeholder=\"Enter Your  Birth Place\"\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                              <label>Gender*</label>\r\n                              <Input\r\n                                id=\"exampleSelect\"\r\n                                name=\"gender\"\r\n                                type=\"select\"\r\n                                value={this.state.data.gender}\r\n                                onChange={this.changeHandler}\r\n                              >\r\n                                <option>Select Gender</option>\r\n                                <option>Male</option>\r\n                                <option>Female</option>\r\n                              </Input>\r\n                            </Col>\r\n\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Marital Status*</label>\r\n                                <Input\r\n                                  type=\"select\"\r\n                                  name=\"marital_status\"\r\n                                  value={this.state.marital_status}\r\n                                  onChange={this.changeHandler}\r\n                                >\r\n                                  <option>Select Marital Status</option>\r\n                                  <option>Single</option>\r\n                                  <option>Married</option>\r\n                                  <option>Divorced</option>\r\n                                  <option>Separated</option>\r\n                                  <option>Widowed</option>\r\n                                </Input>\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Occupation*</label>\r\n                                <Input\r\n                                  type=\"select\"\r\n                                  name=\"occupation\"\r\n                                  value={this.state.data.occupation}\r\n                                  onChange={this.changeHandler}\r\n                                >\r\n                                  <option>Select Employed in</option>\r\n                                  <option>Private Sector</option>\r\n                                  <option>Govt Sector</option>\r\n                                  <option>Business/Self Employed</option>\r\n                                  <option>Civil Services</option>\r\n                                  <option>Defence</option>\r\n                                  <option>Not Working</option>\r\n                                  <option>Student</option>\r\n                                </Input>\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Topic of concern*</label>\r\n                                <Input\r\n                                  type=\"select\"\r\n                                  name=\"topic_of_cnsrn\"\r\n                                  value={this.state.data.topic_of_cnsrn}\r\n                                  onChange={this.changeHandler}\r\n                                >\r\n                                  <option>Select Topic</option>\r\n                                  <option>Career and Business</option>\r\n                                  <option>Marriage</option>\r\n                                  <option>Love and Relationship</option>\r\n                                  <option>Wealth and Property</option>\r\n                                  <option>Education</option>\r\n                                  <option>Legal Matters</option>\r\n                                  <option>Child Name Consultation</option>\r\n                                  <option>Business Name Consultation</option>\r\n                                  <option>Gem Stone Consultation</option>\r\n                                  <option>\r\n                                    Commodity trading consultation\r\n                                  </option>\r\n                                  <option>Match making</option>\r\n                                  <option>Birth Time Rectification</option>\r\n                                  <option>Name Correction Consultation</option>\r\n                                  <option>Travel Abroad Consulation</option>\r\n                                  <option>Remedy Consultation</option>\r\n                                  <option>Health Consultation</option>\r\n                                  <option>Others</option>\r\n                                </Input>\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                              <div class=\"form-group mtb-10\">\r\n                                <label>Enter topic of concern:</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"entertopic_of_cnsrn\"\r\n                                  required\r\n                                  placeholder=\"Enter Your Fullname\"\r\n                                  value={this.state.entertopic_of_cnsrn}\r\n                                  onChange={this.changeHandler}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md=\"12\" className=\"mt-3\">\r\n                              <Button className=\"btn btn-warning\">\r\n                                Start Video with Mukesh07\r\n                              </Button>\r\n                            </Col>\r\n                          </Row>\r\n                        </form>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </section>\r\n            </>\r\n          )} */}\r\n        </LayoutOne>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LiveVideonew;\r\n","import React, { useEffect } from \"react\";\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\n\r\nexport const LiveStreaming = () => {\r\n  //  new component by me\r\n\r\n  let options = {\r\n    // Pass your App ID here.\r\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n    // Set the channel name.\r\n    channel: \"anujesh\",\r\n    // Pass your temp token here.\r\n    token:\r\n      \"0067d1f07c76f9d46be86bc46a791884023IABZ7sN96RKmFTBkTuG/f1zAI3QZSNel+OjfEB1HYpztCElEne4AAAAAEABAuqeD7vxdZAEAAQAOOF1k\",\r\n    // Set the user ID.\r\n    uid: 0,\r\n    // Set the user role\r\n    role: \"Audience\",\r\n  };\r\n\r\n  const channelParameters = {\r\n    // A variable to hold a local audio track.\r\n    localAudioTrack: null,\r\n    // A variable to hold a local video track.\r\n    localVideoTrack: null,\r\n    // A variable to hold a remote audio track.\r\n    remoteAudioTrack: null,\r\n    // A variable to hold a remote video track.\r\n    remoteVideoTrack: null,\r\n    // A variable to hold the remote user id.s\r\n    remoteUid: null,\r\n  };\r\n  async function startBasicCall() {\r\n    // Create an instance of the Agora Engine\r\n    const agoraEngine = AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\r\n    // Dynamically create a container in the form of a DIV element to play the remote video track.\r\n    const remotePlayerContainer = document.createElement(\"div\");\r\n    // Dynamically create a container in the form of a DIV element to play the local video track.\r\n    const localPlayerContainer = document.createElement(\"div\");\r\n    // Specify the ID of the DIV container. You can use the uid of the local user.\r\n    localPlayerContainer.id = options.uid;\r\n    // Set the textContent property of the local video container to the local user id.\r\n    localPlayerContainer.textContent = \"Local user \" + options.uid;\r\n    // Set the local video container size.\r\n    localPlayerContainer.style.width = \"640px\";\r\n    localPlayerContainer.style.height = \"480px\";\r\n    localPlayerContainer.style.padding = \"15px 5px 5px 5px\";\r\n    // Set the remote video container size.\r\n    remotePlayerContainer.style.width = \"640px\";\r\n    remotePlayerContainer.style.height = \"480px\";\r\n    remotePlayerContainer.style.padding = \"15px 5px 5px 5px\";\r\n    // Listen for the \"user-published\" event to retrieve a AgoraRTCRemoteUser object.\r\n    agoraEngine.on(\"user-published\", async (user, mediaType) => {\r\n      // Subscribe to the remote user when the SDK triggers the \"user-published\" event.\r\n      await agoraEngine.subscribe(user, mediaType);\r\n      console.log(\"subscribe success\");\r\n      // Subscribe and play the remote video in the container If the remote user publishes a video track.\r\n      if (mediaType == \"video\") {\r\n        // Retrieve the remote video track.\r\n        channelParameters.remoteVideoTrack = user.videoTrack;\r\n        // Retrieve the remote audio track.\r\n        channelParameters.remoteAudioTrack = user.audioTrack;\r\n        // Save the remote user id for reuse.\r\n        channelParameters.remoteUid = user.uid.toString();\r\n        // Specify the ID of the DIV container. You can use the uid of the remote user.\r\n        remotePlayerContainer.id = user.uid.toString();\r\n        channelParameters.remoteUid = user.uid.toString();\r\n        remotePlayerContainer.textContent =\r\n          \"Remote user \" + user.uid.toString();\r\n        // Append the remote container to the page body.\r\n        document.body.append(remotePlayerContainer);\r\n        if (options.role != \"host\") {\r\n          // Play the remote video track.\r\n          channelParameters.remoteVideoTrack.play(remotePlayerContainer);\r\n        }\r\n      }\r\n      // Subscribe and play the remote audio track If the remote user publishes the audio track only.\r\n      if (mediaType == \"audio\") {\r\n        // Get the RemoteAudioTrack object in the AgoraRTCRemoteUser object.\r\n        channelParameters.remoteAudioTrack = user.audioTrack;\r\n        // Play the remote audio track. No need to pass any DOM element.\r\n        channelParameters.remoteAudioTrack.play();\r\n      }\r\n      // Listen for the \"user-unpublished\" event.\r\n      agoraEngine.on(\"user-unpublished\", (user) => {\r\n        console.log(user.uid + \"has left the channel\");\r\n      });\r\n    });\r\n    window.onload = function () {\r\n      // Listen to the Join button click event.\r\n      document.getElementById(\"join\").onclick = async function () {\r\n        if (options.role == \"\") {\r\n          window.alert(\"Select a user role first!\");\r\n          return;\r\n        }\r\n\r\n        // Join a channel.\r\n        await agoraEngine.join(\r\n          options.appId,\r\n          options.channel,\r\n          options.token,\r\n          options.uid\r\n        );\r\n        // Create a local audio track from the audio sampled by a microphone.\r\n        channelParameters.localAudioTrack =\r\n          await AgoraRTC.createMicrophoneAudioTrack();\r\n        // Create a local video track from the video captured by a camera.\r\n        channelParameters.localVideoTrack =\r\n          await AgoraRTC.createCameraVideoTrack();\r\n        // Append the local video container to the page body.\r\n        document.body.append(localPlayerContainer);\r\n\r\n        // Publish the local audio and video track if the user joins as a host.\r\n        if (options.role == \"host\") {\r\n          // Publish the local audio and video tracks in the channel.\r\n          await agoraEngine.publish([\r\n            channelParameters.localAudioTrack,\r\n            channelParameters.localVideoTrack,\r\n          ]);\r\n          // Play the local video track.\r\n          channelParameters.localVideoTrack.play(localPlayerContainer);\r\n          console.log(\"publish success!\");\r\n        }\r\n      };\r\n      // Listen to the Leave button click event.\r\n      document.getElementById(\"leave\").onclick = async function () {\r\n        // Destroy the local audio and video tracks.\r\n        channelParameters.localAudioTrack.close();\r\n        channelParameters.localVideoTrack.close();\r\n        // Remove the containers you created for the local video and remote video.\r\n        removeVideoDiv(remotePlayerContainer.id);\r\n        removeVideoDiv(localPlayerContainer.id);\r\n        // Leave the channel\r\n        await agoraEngine.leave();\r\n        console.log(\"You left the channel\", agoraEngine);\r\n        // Refresh the page for reuse\r\n        window.location.reload();\r\n      };\r\n      document.getElementById(\"host\").onclick = async function () {\r\n        if (document.getElementById(\"host\").checked) {\r\n          // Save the selected role in a variable for reuse.\r\n          options.role = \"host\";\r\n          // Call the method to set the role as Host.\r\n          await agoraEngine.setClientRole(options.role);\r\n          if (channelParameters.localVideoTrack != null) {\r\n            // Publish the local audio and video track in the channel.\r\n            await agoraEngine.publish([\r\n              channelParameters.localAudioTrack,\r\n              channelParameters.localVideoTrack,\r\n            ]);\r\n            // Stop playing the remote video.\r\n            channelParameters.remoteVideoTrack.stop();\r\n            // Start playing the local video.\r\n            channelParameters.localVideoTrack.play(localPlayerContainer);\r\n          }\r\n        }\r\n      };\r\n      document.getElementById(\"Audience\").onclick = async function () {\r\n        if (document.getElementById(\"Audience\").checked) {\r\n          // Save the selected role in a variable for reuse.\r\n          options.role = \"audience\";\r\n          if (\r\n            channelParameters.localAudioTrack != null &&\r\n            channelParameters.localVideoTrack != null\r\n          ) {\r\n            if (channelParameters.remoteVideoTrack != null) {\r\n              // Replace the current video track with remote video track\r\n              await channelParameters.localVideoTrack.replaceTrack(\r\n                channelParameters.remoteVideoTrack,\r\n                true\r\n              );\r\n            }\r\n          }\r\n          // Call the method to set the role as Audience.\r\n          await agoraEngine.setClientRole(options.role);\r\n        }\r\n      };\r\n    };\r\n  }\r\n  startBasicCall();\r\n  // Remove the video stream from the container.\r\n  function removeVideoDiv(elementId) {\r\n    console.log(\"Removing \" + elementId + \"Div\");\r\n    let Div = document.getElementById(elementId);\r\n    if (Div) {\r\n      Div.remove();\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <h2 className=\"left-align mt-1\">\r\n        {/* Get started with interactive live streaming */}\r\n      </h2>\r\n      <div className=\"row\">\r\n        <div>\r\n          <input type=\"radio\" id=\"host\" name=\"joinAs\" value=\"host\" />\r\n          <label>Host</label>\r\n          <br />\r\n          <input type=\"radio\" id=\"Audience\" name=\"joinAs\" value=\"audience\" />\r\n          <label>Audience</label>\r\n          <br />\r\n          <button type=\"button\" id=\"join\">\r\n            Join\r\n          </button>\r\n          <button type=\"button\" id=\"leave\">\r\n            Leave\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}