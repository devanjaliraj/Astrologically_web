{"version":3,"sources":["components/astrology/YourliveStreamone.js","../node_modules/reactstrap/es/Card.js"],"names":["YourliveStreamone","useState","setVideoCall","setchannelName","callbacks","EndCall","window","location","reload","useEffect","astroid","localStorage","getItem","console","log","axiosConfig","get","then","res","data","channelName","catch","err","headerTop","className","style","display","width","height","rtcProps","appId","channel","token","role","_excluded","propTypes","tag","inverse","bool","color","string","body","outline","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","classes","createElement","ref","defaultProps"],"mappings":"oMA6HeA,UAnHf,WACE,MAAkCC,oBAAS,GAAM,mBAA/BC,GAAF,KAAc,MAC9B,EAAkCD,mBAAS,IAAG,mBAC9C,GADkB,KAAY,KACeA,mBAAS,KAAG,mBAA9BE,GAAF,KAAgB,MACzC,EAA4BF,mBAAS,IAAG,mBACxC,GADa,KAAW,KACEA,mBAAS,KAAG,mBACtC,GADY,KAAU,KACQA,oBAAS,IAAM,mBAE7C,GAFc,KAAY,KAEFA,oBAAS,IAAM,mBACvC,GADW,KAAS,KACsBA,sBAAU,mBAuB9CG,GAvBc,KAAkB,KAuBpB,CAChBC,QAAS,WACPC,OAAOC,SAASC,SAChBN,GAAa,MA+DjB,OAfAO,qBAAU,WACR,IAAMC,EAAUC,aAAaC,QAAQ,WACrCC,QAAQC,IAAIJ,GAEZK,IAEGC,IAAI,oBAAD,OAAqBN,IACxBO,MAAK,SAACC,GAAS,IAAD,QACbL,QAAQC,IAAY,QAAT,EAACI,EAAIC,YAAI,OAAS,QAAT,EAAR,EAAUA,KAAK,UAAE,WAAT,EAAR,EAAmBC,aAC/BjB,EAAuB,QAAT,EAACe,EAAIC,YAAI,OAAS,QAAT,EAAR,EAAUA,KAAK,UAAE,WAAT,EAAR,EAAmBC,gBAEnCC,OAAM,SAACC,GACNT,QAAQC,IAAIQ,QAEf,IAED,6BACE,kBAAC,IAAS,CAACC,UAAU,WACnB,kBAAC,IAAI,CAACC,UAAU,aACd,kBAAC,IAAG,KACF,yBAAKA,UAAU,uBACb,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,MAAO,QAASC,OAAQ,SACrD,kBAAC,IAAU,CAACC,SA9FT,CAEfC,MAAO,mCAOPC,QAAS,UAETC,MACE,sJAOFC,KAAM,YA2EsC7B,UAAWA,Y,iCCnH3D,4EAEI8B,EAAY,CAAC,YAAa,YAAa,QAAS,OAAQ,UAAW,UAAW,MAAO,YAKrFC,EAAY,CACdC,IAAK,IACLC,QAAS,IAAUC,KACnBC,MAAO,IAAUC,OACjBC,KAAM,IAAUH,KAChBI,QAAS,IAAUJ,KACnBd,UAAW,IAAUgB,OACrBG,UAAW,IAAUC,OACrBC,SAAU,IAAUC,UAAU,CAAC,IAAUF,OAAQ,IAAUJ,OAAQ,IAAUO,QAK3EC,EAAO,SAAcC,GACvB,IAAIzB,EAAYyB,EAAMzB,UACpBmB,EAAYM,EAAMN,UAClBJ,EAAQU,EAAMV,MACdE,EAAOQ,EAAMR,KACbJ,EAAUY,EAAMZ,QAChBK,EAAUO,EAAMP,QAChBQ,EAAMD,EAAMb,IACZS,EAAWI,EAAMJ,SACjBM,EAAa,YAA8BF,EAAOf,GAChDkB,EAAU,YAAgB,IAAW5B,EAAW,SAAQa,GAAU,eAAsBI,GAAO,cAAqBF,IAASG,EAAU,SAAW,MAAQ,IAAMH,GAAgBI,GACpL,OAAoB,IAAMU,cAAcH,EAAK,YAAS,GAAIC,EAAY,CACpE3B,UAAW4B,EACXE,IAAKT,MAGTG,EAAKb,UAAYA,EACjBa,EAAKO,aApBc,CACjBnB,IAAK,OAoBQ","file":"static/js/127.61fcce64.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport AgoraUIKit from \"agora-react-uikit\";\r\n\r\nimport axiosConfig from \"../../axiosConfig\";\r\n\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\n\r\n// import VideoCalls from \"./VideoCalls\";\r\n\r\nfunction YourliveStreamone() {\r\n  const [videoCall, setVideoCall] = useState(false);\r\n  const [channelname, setchannel] = useState(\"\");\r\n  const [channelNamecreated, setchannelName] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Token, setToken] = useState(\"\");\r\n  const [Addcall, setAddcall] = useState(false);\r\n\r\n  const [view, setview] = useState(false);\r\n  const [listofchannel, setlistofchannel] = useState();\r\n\r\n  const rtcProps = {\r\n    // Pass your App ID here.\r\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n\r\n    // enableVideo: false,\r\n    // dualStreamMode: 0,\r\n\r\n    // Set the channel name.\r\n    // channel: channelNamecreated,\r\n    channel: \"anujesh\",\r\n    // Pass your temp token here.\r\n    token:\r\n      \"007eJxTYEg1WKq8YNrZq7Hry+t1pN+/dWLIDZotUv3YuP3lGv0TjsIKDOYphmkG5snmZmmWKSZmSakWZknJJmaJ5paGFhYmBkbGfocSUxoCGRmC7M+xMjJAIIjPzpCYV5qVWpzBwAAAcZYfjg==\",\r\n    // token: Token || localStorage.getItem(\"astrotokenforvideocall\"),\r\n\r\n    // Set the user ID.\r\n    // uid: 0,\r\n    // Set the user role\r\n    // role: \"host\",\r\n    role: \"audience\",\r\n  };\r\n  const callbacks = {\r\n    EndCall: () => {\r\n      window.location.reload();\r\n      setVideoCall(false);\r\n    },\r\n  };\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   const astroid = localStorage.getItem(\"astroId\");\r\n\r\n  //   axiosConfig\r\n  //     .post(`/user/add_VideoChannel`, {\r\n  //       astroid: astroid,\r\n  //       channelName: channelname,\r\n  //     })\r\n  //     .then((res) => {\r\n  //       setchannel(\"\");\r\n  //       swal(\"Channel Created Successfully\");\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  const handlestatus = (e) => {\r\n    e.preventDefault();\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n\r\n    let payload = {\r\n      astroAccount: astroid,\r\n    };\r\n    if (Status === \"Active\") {\r\n      axiosConfig\r\n        .post(`/user/astroVideoCall`, payload)\r\n        .then((res) => {\r\n          console.log(res.data.astroAccount);\r\n          setToken(res.data.astroAccount);\r\n          localStorage.setItem(\"astrotokenforvideocall\", res.data.astroAccount);\r\n          setAddcall(true);\r\n\r\n          // setVideoCall(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    if (Status === \"Deactive\") {\r\n      localStorage.removeItem(\"astrotokenforvideocall\");\r\n      setAddcall(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n    console.log(astroid);\r\n\r\n    axiosConfig\r\n      // .get(`/user/getoneChannl/644fae265f6b65e11a4bdbd7`)\r\n      .get(`user/channelList/${astroid}`)\r\n      .then((res) => {\r\n        console.log(res.data?.data[0]?.channelName);\r\n        setchannelName(res.data?.data[0]?.channelName);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <LayoutOne headerTop=\"visible\">\r\n        <Card className=\"mt-1 mb-2\">\r\n          <Row>\r\n            <div className=\"container mt-1 mb-1\">\r\n              <div style={{ display: \"flex\", width: \"100vw\", height: \"80vh\" }}>\r\n                <AgoraUIKit rtcProps={rtcProps} callbacks={callbacks} />\r\n              </div>\r\n            </div>\r\n          </Row>\r\n        </Card>\r\n      </LayoutOne>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourliveStreamone;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\nvar Card = function Card(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    color = props.color,\n    body = props.body,\n    inverse = props.inverse,\n    outline = props.outline,\n    Tag = props.tag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutPropertiesLoose(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;"],"sourceRoot":""}