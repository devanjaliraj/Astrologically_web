{"version":3,"sources":["../node_modules/react/jsx-runtime.js","wrappers/breadcrumb/Breadcrumb.js","components/product/sub-components/ProductRating.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","components/product/ProductModal.js","components/product/ProductGridSingleTwo.js","wrappers/product/ProductGridTwo.js","wrappers/product/ShopProducts.js","components/product/ShopTopFilter.js","components/product/ShopTopActionFilter.js","wrappers/product/ShopTopbarFilter.js","pages/shop/ShopGridFilter.js"],"names":["module","exports","Breadcrumb","className","separator","item","NavLink","finalItem","ProductRating","ratingValue","rating","i","push","key","f","g","Fragment","Symbol","for","h","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","n","Object","prototype","hasOwnProperty","p","ref","__self","__source","q","c","a","k","b","d","e","l","call","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","connect","state","cartitems","cartData","product","currency","discountedprice","finalproductprice","finaldiscountedprice","useState","gallerySwiper","getGallerySwiper","thumbnailSwiper","getThumbnailSwiper","data","color","selectedProductColor","setSelectedProductColor","size","stock","productStock","setProductStock","quantityCount","setQuantityCount","wishlistItem","wishlistitem","compareItem","compareitem","addToCart","addtocart","addToWishlist","addtowishlist","addToCompare","addtocompare","addToast","addtoast","useEffect","controller","control","gallerySwiperParams","getSwiper","spaceBetween","loopedSlides","loop","thumbnailSwiperParams","slidesPerView","touchRatio","freeMode","slideToClickedSlide","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","show","onHide","Header","closeButton","image","map","single","src","process","alt","name","currencySymbol","shortDescription","value","checked","onChange","singleSize","affiliateLink","href","rel","target","onClick","readOnly","disabled","undefined","title","ProductGridSingleTwo","cartItem","discountedPrice","sliderClassName","spaceBottomClass","colorClass","titlePriceClass","modalShow","setModalShow","useToasts","dress","setDress","fetch","response","json","console","log","getData","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","_id","to","product_img","style","width","height","variation","length","id","quantity","product_name","sell_price","ProductModal","cartitem","ownProps","products","getProducts","productData","category","limit","currencyData","cartItems","wishlistItems","wishlistData","compareItems","compareData","dispatch","selectedProductSize","ShopProducts","layout","ShopTopFilter","getSortParams","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags","setActiveSort","tag","ShopTopActionFilter","getFilterSortParams","productCount","sortedProductCount","toggleShopTopFilter","ShopTopbar","getLayout","location","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","pathname","getSortedProducts","filterSortedProducts","slice","content","headerTop","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"mappings":"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","file":"static/js/56.06d7f112.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst ProductRating = ({ ratingValue }) => {\r\n  let rating = [];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\r\n  }\r\n  if (ratingValue && ratingValue > 0) {\r\n    for (let i = 0; i <= ratingValue - 1; i++) {\r\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\r\n    }\r\n  }\r\n  return <Fragment>{rating}</Fragment>;\r\n};\r\n\r\nProductRating.propTypes = {\r\n  ratingValue: PropTypes.number\r\n};\r\n\r\nexport default ProductRating;\r\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nrequire(\"object-assign\");\nvar f = require(\"react\"),\n  g = 60103;\nexports.Fragment = 60107;\nif (\"function\" === typeof Symbol && Symbol.for) {\n  var h = Symbol.for;\n  g = h(\"react.element\");\n  exports.Fragment = h(\"react.fragment\");\n}\nvar m = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,\n  n = Object.prototype.hasOwnProperty,\n  p = {\n    key: !0,\n    ref: !0,\n    __self: !0,\n    __source: !0\n  };\nfunction q(c, a, k) {\n  var b,\n    d = {},\n    e = null,\n    l = null;\n  void 0 !== k && (e = \"\" + k);\n  void 0 !== a.key && (e = \"\" + a.key);\n  void 0 !== a.ref && (l = a.ref);\n  for (b in a) {\n    n.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);\n  }\n  if (c && c.defaultProps) for (b in a = c.defaultProps, a) {\n    void 0 === d[b] && (d[b] = a[b]);\n  }\n  return {\n    $$typeof: g,\n    type: c,\n    key: e,\n    ref: l,\n    props: d,\n    _owner: m.current\n  };\n}\nexports.jsx = q;\nexports.jsxs = q;","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\n// import { getProductCartQuantity } from \"../../helpers/product\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Rating from \"./sub-components/ProductRating\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ProductModal(props) {\r\n  const { product } = props;\r\n  const { currency } = props;\r\n  const { discountedprice } = props;\r\n  const { finalproductprice } = props;\r\n  const { finaldiscountedprice } = props;\r\n\r\n  const [gallerySwiper, getGallerySwiper] = useState(null);\r\n  const [thumbnailSwiper, getThumbnailSwiper] = useState(null);\r\n  const [selectedProductColor, setSelectedProductColor] = useState(\r\n    product.data ? product.data[0].color : \"\"\r\n  );\r\n  // const [selectedProductSize, setSelectedProductSize] = useState(\r\n  //   product.data ? product.data[0].size[0].name : \"\"\r\n  // );\r\n  const [productStock, setProductStock] = useState(\r\n    product.data ? product.data[0].size[0].stock : product.stock\r\n  );\r\n  const [quantityCount, setQuantityCount] = useState(1);\r\n\r\n  const wishlistItem = props.wishlistitem;\r\n  const compareItem = props.compareitem;\r\n\r\n  const addToCart = props.addtocart;\r\n  const addToWishlist = props.addtowishlist;\r\n  const addToCompare = props.addtocompare;\r\n\r\n  const addToast = props.addtoast;\r\n  const cartItems = props.cartitems;\r\n\r\n  // const productCartQty = getProductCartQuantity(\r\n  //   cartItems,\r\n  //   product,\r\n  //   selectedProductColor,\r\n  //   selectedProductSize\r\n  // );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      gallerySwiper !== null &&\r\n      gallerySwiper.controller &&\r\n      thumbnailSwiper !== null &&\r\n      thumbnailSwiper.controller\r\n    ) {\r\n      gallerySwiper.controller.control = thumbnailSwiper;\r\n      thumbnailSwiper.controller.control = gallerySwiper;\r\n    }\r\n  }, [gallerySwiper, thumbnailSwiper]);\r\n\r\n  const gallerySwiperParams = {\r\n    getSwiper: getGallerySwiper,\r\n    spaceBetween: 10,\r\n    loopedSlides: 4,\r\n    loop: true,\r\n  };\r\n\r\n  const thumbnailSwiperParams = {\r\n    getSwiper: getThumbnailSwiper,\r\n    spaceBetween: 10,\r\n    slidesPerView: 4,\r\n    loopedSlides: 4,\r\n    touchRatio: 0.2,\r\n    freeMode: true,\r\n    loop: true,\r\n    slideToClickedSlide: true,\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\",\r\n    },\r\n    renderPrevButton: () => (\r\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-left\" />\r\n      </button>\r\n    ),\r\n    renderNextButton: () => (\r\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-right\" />\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        className=\"product-quickview-modal-wrapper\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 col-sm-12 col-xs-12\">\r\n              <div className=\"product-large-image-wrapper\">\r\n                <Swiper {...gallerySwiperParams}>\r\n                  {product.image &&\r\n                    product.image.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\">\r\n                            <img\r\n                              src={process.env.PUBLIC_URL + single}\r\n                              className=\"img-fluid\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n              <div className=\"product-small-image-wrapper mt-15\">\r\n                <Swiper {...thumbnailSwiperParams}>\r\n                  {product.image &&\r\n                    product.image.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\">\r\n                            <img\r\n                              src={process.env.PUBLIC_URL + single}\r\n                              className=\"img-fluid\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7 col-sm-12 col-xs-12\">\r\n              <div className=\"product-details-content quickview-content\">\r\n                <h2>{product.name}</h2>\r\n                <div className=\"product-details-price\">\r\n                  {discountedprice !== null ? (\r\n                    <Fragment>\r\n                      <span>\r\n                        {currency.currencySymbol + finaldiscountedprice}\r\n                      </span>{\" \"}\r\n                      <span className=\"old\">\r\n                        {currency.currencySymbol + finalproductprice}\r\n                      </span>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <span>{currency.currencySymbol + finalproductprice} </span>\r\n                  )}\r\n                </div>\r\n                {product.rating && product.rating > 0 ? (\r\n                  <div className=\"pro-details-rating-wrap\">\r\n                    <div className=\"pro-details-rating\">\r\n                      <Rating ratingValue={product.rating} />\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div className=\"pro-details-list\">\r\n                  <p>{product.shortDescription}</p>\r\n                </div>\r\n\r\n                {product.data ? (\r\n                  <div className=\"pro-details-size-color\">\r\n                    <div className=\"pro-details-color-wrap\">\r\n                      <span>Color</span>\r\n                      <div className=\"pro-details-color-content\">\r\n                        {product.data.map((single, key) => {\r\n                          return (\r\n                            <label\r\n                              className={`pro-details-color-content--single ${single.color}`}\r\n                              key={key}\r\n                            >\r\n                              <input\r\n                                type=\"radio\"\r\n                                value={single.color}\r\n                                name=\"product-color\"\r\n                                checked={\r\n                                  single.color === selectedProductColor\r\n                                    ? \"checked\"\r\n                                    : \"\"\r\n                                }\r\n                                onChange={() => {\r\n                                  setSelectedProductColor(single.color);\r\n                                  // setSelectedProductSize(single.size[0].name);\r\n                                  setProductStock(single.size[0].stock);\r\n                                  setQuantityCount(1);\r\n                                }}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                            </label>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pro-details-size\">\r\n                      <span>Size</span>\r\n                      <div className=\"pro-details-size-content\">\r\n                        {product.data &&\r\n                          product.data.map((single) => {\r\n                            return single.color === selectedProductColor\r\n                              ? single.size.map((singleSize, key) => {\r\n                                  return (\r\n                                    <label\r\n                                      className={`pro-details-size-content--single`}\r\n                                      key={key}\r\n                                    >\r\n                                      {/* <input\r\n                                        type=\"radio\"\r\n                                        value={singleSize.name}\r\n                                        checked={\r\n                                          singleSize.name ===\r\n                                          selectedProductSize\r\n                                            ? \"checked\"\r\n                                            : \"\"\r\n                                        }\r\n                                        onChange={() => {\r\n                                          setSelectedProductSize(\r\n                                            singleSize.name\r\n                                          );\r\n                                          setProductStock(singleSize.stock);\r\n                                          setQuantityCount(1);\r\n                                        }}\r\n                                      /> */}\r\n                                      <span className=\"size-name\">\r\n                                        {singleSize.name}\r\n                                      </span>\r\n                                    </label>\r\n                                  );\r\n                                })\r\n                              : \"\";\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {product.affiliateLink ? (\r\n                  <div className=\"pro-details-quality\">\r\n                    <div className=\"pro-details-cart btn-hover\">\r\n                      <a\r\n                        href={product.affiliateLink}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        Buy Now\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"pro-details-quality\">\r\n                    <div className=\"cart-plus-minus\">\r\n                      <button\r\n                        onClick={() =>\r\n                          setQuantityCount(\r\n                            quantityCount > 1 ? quantityCount - 1 : 1\r\n                          )\r\n                        }\r\n                        className=\"dec qtybutton\"\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <input\r\n                        className=\"cart-plus-minus-box\"\r\n                        type=\"text\"\r\n                        value={quantityCount}\r\n                        readOnly\r\n                      />\r\n                      <button\r\n                        // onClick={() =>\r\n                        //   setQuantityCount(\r\n                        //     quantityCount < productStock - productCartQty\r\n                        //       ? quantityCount + 1\r\n                        //       : quantityCount\r\n                        //   )\r\n                        // }\r\n                        className=\"inc qtybutton\"\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pro-details-cart btn-hover\">\r\n                      {productStock && productStock > 0 ? (\r\n                        <button\r\n                          onClick={() =>\r\n                            addToCart(\r\n                              product,\r\n                              addToast,\r\n                              quantityCount,\r\n                              selectedProductColor\r\n                              // selectedProductSize\r\n                            )\r\n                          }\r\n                          // disabled={productCartQty >= productStock}\r\n                        >\r\n                          {\" \"}\r\n                          Add To Cart{\" \"}\r\n                        </button>\r\n                      ) : (\r\n                        <button disabled>Out of Stock</button>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"pro-details-wishlist\">\r\n                      <button\r\n                        className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                        disabled={wishlistItem !== undefined}\r\n                        title={\r\n                          wishlistItem !== undefined\r\n                            ? \"Added to wishlist\"\r\n                            : \"Add to wishlist\"\r\n                        }\r\n                        onClick={() => addToWishlist(product, addToast)}\r\n                      >\r\n                        <i className=\"pe-7s-like\" />\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pro-details-compare\">\r\n                      <button\r\n                        className={compareItem !== undefined ? \"active\" : \"\"}\r\n                        disabled={compareItem !== undefined}\r\n                        title={\r\n                          compareItem !== undefined\r\n                            ? \"Added to compare\"\r\n                            : \"Add to compare\"\r\n                        }\r\n                        onClick={() => addToCompare(product, addToast)}\r\n                      >\r\n                        <i className=\"pe-7s-shuffle\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nProductModal.propTypes = {\r\n  addtoast: PropTypes.func,\r\n  addtocart: PropTypes.func,\r\n  addtocompare: PropTypes.func,\r\n  addtowishlist: PropTypes.func,\r\n  cartitems: PropTypes.array,\r\n  compareitem: PropTypes.object,\r\n  currency: PropTypes.object,\r\n  discountedprice: PropTypes.number,\r\n  finaldiscountedprice: PropTypes.number,\r\n  finalproductprice: PropTypes.number,\r\n  onHide: PropTypes.func,\r\n  product: PropTypes.object,\r\n  show: PropTypes.bool,\r\n  wishlistitem: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartitems: state.cartData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductModal);\r\n","import Axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport ProductModal from \"./ProductModal\";\r\n\r\nconst ProductGridSingleTwo = ({\r\n  product,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItem,\r\n  wishlistItem,\r\n  discountedPrice,\r\n  compareItem,\r\n  sliderClassName,\r\n  spaceBottomClass,\r\n  colorClass,\r\n  titlePriceClass,\r\n}) => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const { addToast } = useToasts();\r\n  // const [users, setUsers] = useState([]);\r\n  // const getUsers = async () => {\r\n  //   const res = await Axios.get(\"http://13.235.180.192/api/admin/getproduct\")\r\n  //     .then(data => {\r\n  //       console.log(data);\r\n  //       console.log(data.data.data.data);\r\n  //       setUsers(data.data.data);\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(error);\r\n  //     });\r\n  // };\r\n  // useEffect(() => {\r\n  //   getUsers();\r\n  // }, []);\r\n\r\n  const [dress, setDress] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const response = await fetch(\"http://13.235.180.192/api/admin/getproduct\");\r\n\r\n      const data = await response.json();\r\n\r\n      setDress(data.data);\r\n      console.log(data.data);\r\n    }\r\n    getData();\r\n    return;\r\n  }, []);\r\n\r\n  discountedPrice = getDiscountPrice(product.price, product.discount);\r\n  const finalProductPrice = +(product.price * currency.currencyRate).toFixed(2);\r\n  const finalDiscountedPrice = +(\r\n    discountedPrice * currency.currencyRate\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <Fragment>\r\n      {dress.map(product => (\r\n        <div\r\n          className={`col-xl-3 col-md-6 col-lg-4 col-sm-6 ${\r\n            sliderClassName ? sliderClassName : \"\"\r\n          }`}\r\n          key={product._id}\r\n        >\r\n          <div\r\n            className={`product-wrap-2 ${\r\n              spaceBottomClass ? spaceBottomClass : \"\"\r\n            } ${colorClass ? colorClass : \"\"} `}\r\n          >\r\n            <div className=\"product-img\">\r\n              <Link\r\n                to={process.env.PUBLIC_URL + \"/product-sticky/\" + product._id}\r\n              >\r\n                <img\r\n                  className=\"default-img\"\r\n                  src={product.product_img[0]}\r\n                  alt=\"\"\r\n                  style={{ width: \"200px\", height: \"250px\" }}\r\n                />\r\n\r\n                <img\r\n                  className=\"hover-img\"\r\n                  src={product.product_img[1]}\r\n                  alt=\"\"\r\n                  style={{ width: \"200px\", height: \"250px\" }}\r\n                />\r\n              </Link>\r\n              {/* {product.discount || product.new ? (\r\n                <div className=\"product-img-badges\">\r\n                  {product.discount ? (\r\n                    <span className=\"pink\">-{product.discount}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {product.new ? <span className=\"purple\">New</span> : \"\"}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n\r\n              <div className=\"product-action-2\">\r\n                {product.affiliateLink ? (\r\n                  <a\r\n                    href={product.affiliateLink}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                    title=\"Buy now\"\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-shopping-cart\"></i>{\" \"}\r\n                  </a>\r\n                ) : product.variation && product.variation.length >= 1 ? (\r\n                  <Link\r\n                    to={`${process.env.PUBLIC_URL}/product/${product.id}`}\r\n                    title=\"Select options\"\r\n                  >\r\n                    <i className=\"fa fa-cog\"></i>\r\n                  </Link>\r\n                ) : product.stock && product.stock > 0 ? (\r\n                  <button\r\n                    onClick={() => addToCart(product, addToast)}\r\n                    className={\r\n                      cartItem !== undefined && cartItem.quantity > 0\r\n                        ? \"active\"\r\n                        : \"\"\r\n                    }\r\n                    disabled={cartItem !== undefined && cartItem.quantity > 0}\r\n                    title={\r\n                      cartItem !== undefined ? \"Added to cart\" : \"Add to cart\"\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-shopping-cart\"></i>{\" \"}\r\n                  </button>\r\n                ) : (\r\n                  <button disabled className=\"active\" title=\"Out of stock\">\r\n                    <i className=\"fa fa-shopping-cart\"></i>\r\n                  </button>\r\n                )}\r\n\r\n                <button onClick={() => setModalShow(true)} title=\"Quick View\">\r\n                  <i className=\"fa fa-eye\"></i>\r\n                </button>\r\n\r\n                <button\r\n                  className={compareItem !== undefined ? \"active\" : \"\"}\r\n                  disabled={compareItem !== undefined}\r\n                  title={\r\n                    compareItem !== undefined\r\n                      ? \"Added to compare\"\r\n                      : \"Add to compare\"\r\n                  }\r\n                  onClick={() => addToCompare(product, addToast)}\r\n                >\r\n                  <i className=\"fa fa-retweet\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"product-content-2\">\r\n              <div\r\n                className={`title-price-wrap-2 ${\r\n                  titlePriceClass ? titlePriceClass : \"\"\r\n                }`}\r\n              >\r\n                <h3>\r\n                  <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\r\n                    {product.product_name}\r\n                  </Link>\r\n                </h3>\r\n                <div className=\"price-2\">\r\n                  <Fragment>\r\n                    <span>₹ {product.sell_price}</span>\r\n                  </Fragment>\r\n                </div>\r\n              </div>\r\n              <div className=\"pro-wishlist-2\">\r\n                <button\r\n                  className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                  disabled={wishlistItem !== undefined}\r\n                  title={\r\n                    wishlistItem !== undefined\r\n                      ? \"Added to wishlist\"\r\n                      : \"Add to wishlist\"\r\n                  }\r\n                  onClick={() => addToWishlist(product, addToast)}\r\n                >\r\n                  <i className=\"fa fa-heart-o\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {/* product modal */}\r\n      <ProductModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        product={product}\r\n        currency={currency}\r\n        discountedprice={discountedPrice}\r\n        finalproductprice={finalProductPrice}\r\n        finaldiscountedprice={finalDiscountedPrice}\r\n        cartitem={cartItem}\r\n        wishlistitem={wishlistItem}\r\n        compareitem={compareItem}\r\n        addtocart={addToCart}\r\n        addtowishlist={addToWishlist}\r\n        addtocompare={addToCompare}\r\n        addtoast={addToast}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGridSingleTwo.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  addToCompare: PropTypes.func,\r\n  addToWishlist: PropTypes.func,\r\n  cartItem: PropTypes.object,\r\n  compareItem: PropTypes.object,\r\n  currency: PropTypes.object,\r\n  product: PropTypes.object,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  colorClass: PropTypes.string,\r\n  titlePriceClass: PropTypes.string,\r\n  wishlistItem: PropTypes.object,\r\n};\r\n\r\nexport default ProductGridSingleTwo;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProducts } from \"../../helpers/product\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\r\nimport { addToCompare } from \"../../redux/actions/compareActions\";\r\nimport ProductGridSingleTwo from \"../../components/product/ProductGridSingleTwo\";\r\n\r\nconst ProductGridTwo = ({\r\n  products,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItems,\r\n  wishlistItems,\r\n  compareItems,\r\n  sliderClassName,\r\n  spaceBottomClass,\r\n  colorClass,\r\n  titlePriceClass,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {products.map(product => {\r\n        return (\r\n          <ProductGridSingleTwo\r\n            sliderClassName={sliderClassName}\r\n            spaceBottomClass={spaceBottomClass}\r\n            colorClass={colorClass}\r\n            product={product}\r\n            currency={currency}\r\n            addToCart={addToCart}\r\n            addToWishlist={addToWishlist}\r\n            addToCompare={addToCompare}\r\n            // cartItem={\r\n            //   cartItems.filter(cartItem => cartItem.id === product.id)[0]\r\n            // }\r\n            // wishlistItem={\r\n            //   wishlistItems.filter(\r\n            //     wishlistItem => wishlistItem.id === product.id\r\n            //   )[0]\r\n            // }\r\n            // compareItem={\r\n            //   compareItems.filter(\r\n            //     compareItem => compareItem.id === product.id\r\n            //   )[0]\r\n            // }\r\n            key={product.id}\r\n            titlePriceClass={titlePriceClass}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGridTwo.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  addToCompare: PropTypes.func,\r\n  addToWishlist: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  compareItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  products: PropTypes.array,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  colorClass: PropTypes.string,\r\n  titlePriceClass: PropTypes.string,\r\n  wishlistItems: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    products: getProducts(\r\n      state.productData.products,\r\n      ownProps.category,\r\n      ownProps.type,\r\n      ownProps.limit\r\n    ),\r\n    currency: state.currencyData,\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    compareItems: state.compareData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addToCart: (\r\n      item,\r\n      addToast,\r\n      quantityCount,\r\n      selectedProductColor,\r\n      selectedProductSize\r\n    ) => {\r\n      dispatch(\r\n        addToCart(\r\n          item,\r\n          addToast,\r\n          quantityCount,\r\n          selectedProductColor,\r\n          selectedProductSize\r\n        )\r\n      );\r\n    },\r\n    addToWishlist: (item, addToast) => {\r\n      dispatch(addToWishlist(item, addToast));\r\n    },\r\n    addToCompare: (item, addToast) => {\r\n      dispatch(addToCompare(item, addToast));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridTwo);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport ProductGridTwo from \"./ProductGridTwo\";\r\n\r\nconst ShopProducts = ({ products, layout }) => {\r\n  return (\r\n    <div className=\"shop-bottom-area mt-35\">\r\n      <div className={`row ${layout ? layout : \"\"}`}>\r\n        <ProductGridTwo products={products} spaceBottomClass=\"mb-25\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopProducts.propTypes = {\r\n  layout: PropTypes.string,\r\n  products: PropTypes.array,\r\n};\r\n\r\nexport default ShopProducts;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n  setActiveSort\r\n} from \"../../helpers/product\";\r\n\r\nconst ShopTopFilter = ({ products, getSortParams }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n\r\n  return (\r\n    <div className=\"product-filter-wrapper\" id=\"product-filter-wrapper\">\r\n      <div className=\"product-filter-wrapper__inner\">\r\n        <div className=\"row\">\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Categories</h5>\r\n              {uniqueCategories ? (\r\n                <ul>\r\n                  {uniqueCategories.map((category, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"category\", category);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {category}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No categories found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Color</h5>\r\n              {uniqueColors ? (\r\n                <ul>\r\n                  {uniqueColors.map((color, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"color\", color);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {color}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No colors found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Size</h5>\r\n              {uniqueSizes ? (\r\n                <ul>\r\n                  {uniqueSizes.map((size, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          className=\"text-uppercase\"\r\n                          onClick={e => {\r\n                            getSortParams(\"size\", size);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {size}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No sizes found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter product-filter--tag\">\r\n              <h5>Tag</h5>\r\n              {uniqueTags ? (\r\n                <ul>\r\n                  {uniqueTags.map((tag, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"tag\", tag);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {tag}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No tags found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopFilter.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopTopFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopFilter from \"./ShopTopFilter\";\r\nimport { toggleShopTopFilter } from \"../../helpers/product\";\r\n\r\nconst ShopTopActionFilter = ({\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"shop-top-bar mb-35\">\r\n        <div className=\"select-shoing-wrap\">\r\n          <div className=\"shop-select\">\r\n            <select\r\n              onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n            >\r\n              <option value=\"default\">Default</option>\r\n              <option value=\"priceHighToLow\">Price - High to Low</option>\r\n              <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n            </select>\r\n          </div>\r\n          <p>\r\n            Showing {sortedProductCount} of {productCount} result\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"filter-active\">\r\n          <button onClick={e => toggleShopTopFilter(e)}>\r\n            <i className=\"fa fa-plus\"></i> filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* shop top filter */}\r\n      <ShopTopFilter products={products} getSortParams={getSortParams} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopActionFilter.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopActionFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopActionFilter\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n        products={products}\r\n        getSortParams={getSortParams}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport Paginator from 'react-hooks-paginator';\r\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\r\nimport { connect } from 'react-redux';\r\nimport { getSortedProducts } from '../../helpers/product';\r\nimport LayoutOne from '../../layouts/LayoutOne';\r\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\r\nimport ShopTopbarFilter from '../../wrappers/product/ShopTopbarFilter';\r\nimport ShopProducts from '../../wrappers/product/ShopProducts';\r\n\r\nconst ShopGridFilter = ({location, products}) => {\r\n    const [layout, setLayout] = useState('grid three-column');\r\n    const [sortType, setSortType] = useState('');\r\n    const [sortValue, setSortValue] = useState('');\r\n    const [filterSortType, setFilterSortType] = useState('');\r\n    const [filterSortValue, setFilterSortValue] = useState('');\r\n    const [offset, setOffset] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentData, setCurrentData] = useState([]);\r\n    const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n    const pageLimit = 15;\r\n    const {pathname} = location;\r\n\r\n    const getLayout = (layout) => {\r\n        setLayout(layout)\r\n    }\r\n\r\n    const getSortParams = (sortType, sortValue) => {\r\n        setSortType(sortType);\r\n        setSortValue(sortValue);\r\n    }\r\n\r\n    const getFilterSortParams = (sortType, sortValue) => {\r\n        setFilterSortType(sortType);\r\n        setFilterSortValue(sortValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\r\n        sortedProducts = filterSortedProducts;\r\n        setSortedProducts(sortedProducts);\r\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue ]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <title>Flone | Shop Page</title>\r\n                <meta name=\"description\" content=\"Shop page of flone react minimalist eCommerce template.\" />\r\n            </MetaTags>\r\n\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + '/'}>Home</BreadcrumbsItem>\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>Shop</BreadcrumbsItem>\r\n\r\n            <LayoutOne headerTop=\"visible\">\r\n                {/* breadcrumb */}\r\n                <Breadcrumb />\r\n\r\n                <div className=\"shop-area pt-95 pb-100\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                {/* shop topbar filter */}\r\n                                <ShopTopbarFilter getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={currentData.length} products={products} getSortParams={getSortParams}/>\r\n\r\n                                {/* shop page content default */}\r\n                                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                                {/* shop product pagination */}\r\n                                <div className=\"pro-pagination-style text-center mt-30\">\r\n                                    <Paginator\r\n                                        totalRecords={sortedProducts.length}\r\n                                        pageLimit={pageLimit}\r\n                                        pageNeighbours={2}\r\n                                        setOffset={setOffset}\r\n                                        currentPage={currentPage}\r\n                                        setCurrentPage={setCurrentPage}\r\n                                        pageContainerClass=\"mb-0 mt-0\"\r\n                                        pagePrevText=\"«\"\r\n                                        pageNextText=\"»\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </LayoutOne>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nShopGridFilter.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        products: state.productData.products\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShopGridFilter);"],"sourceRoot":""}